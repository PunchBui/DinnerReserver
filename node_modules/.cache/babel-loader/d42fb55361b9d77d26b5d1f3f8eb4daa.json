{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\PunchJa\\\\Desktop\\\\Projects\\\\TestBuddyReview\\\\react-gh-pages\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"C:\\\\Users\\\\PunchJa\\\\Desktop\\\\Projects\\\\TestBuddyReview\\\\react-gh-pages\\\\src\\\\Components\\\\Main.js\";\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { FlexboxCenter } from '../StyledCom/flexbox.js';\nimport bgSearch from '../Assets/1.png';\nimport Cards from './cards.js';\nimport Queded from './Queqed.js';\nimport Mc from '../Assets/Mc.png';\nimport mk from '../Assets/mk.jpg';\nimport kfc from '../Assets/kfc.png';\nimport bgk from '../Assets/bgk.png';\nimport { Link } from 'react-router-dom';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setSearch = e => {\n      this.setState({\n        searchInput: e\n      });\n    };\n\n    this.dinningPlace = {\n      McDonald: {\n        name: 'McDonald',\n        place: 'Central Rama 2',\n        img: Mc,\n        currQ: Math.floor(Math.random() * 100)\n      },\n      KFC: {\n        name: 'KFC',\n        place: 'Central Rama 3',\n        img: kfc,\n        currQ: Math.floor(Math.random() * 100)\n      },\n      BurgerKing: {\n        name: 'BurgerKing',\n        place: 'Central Rama 4',\n        img: bgk,\n        currQ: Math.floor(Math.random() * 100)\n      },\n      MK: {\n        name: 'MK',\n        place: 'Central Rama 5',\n        img: mk,\n        currQ: Math.floor(Math.random() * 100)\n      }\n    };\n\n    this.searchHandler = () => {\n      let list = {};\n      console.log(\"searching...\");\n\n      if (this.state.searchInput.includes(\"Mcdonald\")) {\n        console.log(\"Mc\");\n        let mc = {\n          Mcdonald: this.dinningPlace.McDonald\n        };\n        list = _objectSpread({}, list, {}, mc);\n      } else if (this.state.searchInput.includes(\"MK\")) {\n        console.log(\"MK\");\n        let mk = {\n          MK: this.dinningPlace.MK\n        };\n        list = _objectSpread({}, list, {}, mk);\n      } else if (this.state.searchInput.includes(\"KFC\")) {\n        console.log(\"KFC\");\n        let kfc = {\n          KFC: this.dinningPlace.KFC\n        };\n        list = _objectSpread({}, list, {}, kfc);\n      } else if (this.state.searchInput.includes(\"BurgerKing\")) {\n        console.log(\"BurgerKing\");\n        let Burgerking = {\n          BurgerKing: this.dinningPlace.BurgerKing\n        };\n        list = _objectSpread({}, list, {}, Burgerking);\n      } else {\n        list = _objectSpread({}, this.dinningPlace);\n      }\n\n      this.setState({\n        placeList: list\n      }); //console.log(list);\n    };\n\n    this.state = {\n      searchInput: \"\",\n      //   name: ['McDonald','KFC','BurgerKing','MK'],\n      //   place: ['Central Rama 2','Central Rama 3','Central Rama 4','Central Rama 5'],\n      //   currQ: Math.floor(Math.random() * 100)\n      placeList: {\n        McDonald: {\n          name: 'McDonald',\n          place: 'Central Rama 2',\n          img: Mc,\n          currQ: Math.floor(Math.random() * 100)\n        },\n        KFC: {\n          name: 'KFC',\n          place: 'Central Rama 3',\n          img: kfc,\n          currQ: Math.floor(Math.random() * 100)\n        },\n        BurgerKing: {\n          name: 'BurgerKing',\n          place: 'Central Rama 4',\n          img: bgk,\n          currQ: Math.floor(Math.random() * 100)\n        },\n        MK: {\n          name: 'MK',\n          place: 'Central Rama 5',\n          img: mk,\n          currQ: Math.floor(Math.random() * 100)\n        }\n      }\n    };\n  } // sendProps = () => {\n  //     this.setState({\n  //         parentValue : \"success\"\n  //     });\n  // }\n\n\n  render() {\n    const dinningPlace = {\n      McDonald: {\n        name: 'McDonald',\n        place: 'Central Rama 2',\n        img: Mc,\n        currQ: Math.floor(Math.random() * 100)\n      },\n      KFC: {\n        name: 'KFC',\n        place: 'Central Rama 3',\n        img: kfc,\n        currQ: Math.floor(Math.random() * 100)\n      },\n      BurgerKing: {\n        name: 'BurgerKing',\n        place: 'Central Rama 4',\n        img: bgk,\n        currQ: Math.floor(Math.random() * 100)\n      },\n      MK: {\n        name: 'MK',\n        place: 'Central Rama 5',\n        img: mk,\n        currQ: Math.floor(Math.random() * 100)\n      }\n    };\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(SearchBg, {\n      src: bgSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(SearchContainner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Search, {\n      placeholder: \"Find Dinner Place. (try Mcdonald,KFC,MK,Burgerking)\",\n      value: this.state.searchInput,\n      onChange: e => this.setSearch(e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(SearchBtn, {\n      onClick: this.searchHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"SEARCH\")), React.createElement(CardCon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, Object.entries(this.state.placeList).map(([key, val]) => {\n      // console.log(key, val.name)\n      return React.createElement(WrapperCards, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(LogoCards, {\n        src: val.img,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), React.createElement(TextContainnerCards, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(TextsCards, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, val.name), React.createElement(TextsCards, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Place : \", val.place), React.createElement(TextsCards, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Queq : \", val.currQ), React.createElement(Link, {\n        to: {\n          pathname: '/queq',\n          state: {\n            din: val\n          }\n        },\n        style: {\n          marginTop: 'auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(ButtonCards, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Reserve\")))); // console.log(this.state.placeList)\n      // return(searchList)\n    })));\n  }\n\n}\n\nexport default Main;\nconst Wrapper = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\nwidth: 100%;\n`;\nconst SearchContainner = styled(FlexboxCenter)`\nheight: 300px;\nwidth: 100%;\nbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n@media (max-width: 768px) {\n    flex-direction: column;\n}\n`;\nconst SearchBg = styled.img`\nopacity: 0.75;\nposition: absolute;\nheight: 300px;\nwidth: 100%;\nobject-fit: cover;\nz-index: -1;\n`;\nconst Search = styled.input`\nwidth: 70%;\nheight: 30px;\nborder: none;\n  text-indent: 10px;\n::placeholder {\n  text-indent: 10px;\n}\n`;\nconst SearchBtn = styled.button`\nwidth: 10%;\nheight: 33px;\nborder: none;\nbackground: linear-gradient(90deg, rgba(184,52,4,1) 0%, rgba(200,16,16,1) 27%, rgba(255,0,39,1) 100%);\ncolor: #FFFFFF;\nfont-weight: bold;\ncursor:pointer;\n@media (max-width: 768px) {\n    width: 70%;\n}\n`;\nconst CardCon = styled(FlexboxCenter)`\nmargin: 36px 0 36px 0;\nwidth: 100%;\nflex-wrap: wrap;\n@media (max-width: 768px) {\nmargin: 8px 0 8px 0;\n}\n`; /////\n\nconst WrapperCards = styled.div`\ndisplay: flex;\n/* align-items: center; */\n/* justify-content: center; */\nborder-radius: 25px;\nbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\nwidth: 33%;\nmargin: 16px;\n@media (max-width: 768px) {\n    width: 80%;\n    flex-direction:column;\n}\n`;\nconst TextContainnerCards = styled.div`\ndisplay: flex;\nflex-direction: column;\n/* align-items: center; */\n/* justify-content: center; */\npadding: 16px;\n`;\nconst TextsCards = styled.span`\nfont-size: 1.2rem;\nmargin: 8px 0 8px 0;\n@media (max-width: 768px) {\nmargin: 2px 0 2px 0;\n}\n`;\nconst ButtonCards = styled.button`\nmargin-top: auto;\nheight: 50px;\nborder: none;\nbackground: linear-gradient(90deg, rgba(184,52,4,1) 0%, rgba(200,16,16,1) 27%, rgba(255,0,39,1) 100%);\ncolor: #FFFFFF;\nfont-weight: bold;\nwidth: 100%;\ncursor:pointer;\n@media (max-width: 768px) {\nmargin-top: 8px;\n}\n`;\nconst LogoCards = styled.img`\nmargin-right: 8px;\nobject-fit: contain;\npadding: 12px;\nmin-width: 100px;\nborder-radius:  25px 0 0 25px ;\nbackground: linear-gradient(90deg, rgba(211,235,9,1) 0%, rgba(199,5,5,1) 52%, rgba(222,30,30,1) 100%);\n@media (max-width: 768px) {\nborder-radius: 25px 25px 0 0;\nmargin-right: 0px;\n}\n`;","map":{"version":3,"sources":["C:/Users/PunchJa/Desktop/Projects/TestBuddyReview/react-gh-pages/src/Components/Main.js"],"names":["React","Component","styled","FlexboxCenter","bgSearch","Cards","Queded","Mc","mk","kfc","bgk","Link","Main","constructor","props","setSearch","e","setState","searchInput","dinningPlace","McDonald","name","place","img","currQ","Math","floor","random","KFC","BurgerKing","MK","searchHandler","list","console","log","state","includes","mc","Mcdonald","Burgerking","placeList","render","target","value","Object","entries","map","key","val","pathname","din","marginTop","Wrapper","div","SearchContainner","SearchBg","Search","input","SearchBtn","button","CardCon","WrapperCards","TextContainnerCards","TextsCards","span","ButtonCards","LogoCards"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\nimport { FlexboxCenter } from '../StyledCom/flexbox.js'\r\nimport bgSearch from '../Assets/1.png'\r\nimport Cards from './cards.js'\r\nimport Queded from './Queqed.js'\r\nimport Mc from '../Assets/Mc.png'\r\nimport mk from '../Assets/mk.jpg'\r\nimport kfc from '../Assets/kfc.png'\r\nimport bgk from '../Assets/bgk.png'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Main extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n          searchInput : \"\",\r\n        //   name: ['McDonald','KFC','BurgerKing','MK'],\r\n        //   place: ['Central Rama 2','Central Rama 3','Central Rama 4','Central Rama 5'],\r\n        //   currQ: Math.floor(Math.random() * 100)\r\n          placeList : {\r\n            McDonald: {\r\n                name: 'McDonald',\r\n                place: 'Central Rama 2',\r\n                img: Mc,\r\n                currQ: Math.floor(Math.random() * 100)\r\n            },\r\n            KFC: {\r\n                name: 'KFC',\r\n                place: 'Central Rama 3',\r\n                img: kfc,\r\n                currQ: Math.floor(Math.random() * 100)\r\n            },\r\n            BurgerKing: {\r\n                name: 'BurgerKing',\r\n                place: 'Central Rama 4',\r\n                img: bgk,\r\n                currQ: Math.floor(Math.random() * 100)\r\n            },\r\n            MK: {\r\n                name: 'MK',\r\n                place: 'Central Rama 5',\r\n                img: mk,\r\n                currQ: Math.floor(Math.random() * 100)\r\n            }\r\n          }\r\n        };\r\n    }\r\n    // sendProps = () => {\r\n    //     this.setState({\r\n    //         parentValue : \"success\"\r\n    //     });\r\n    // }\r\n    setSearch = (e) => {\r\n        this.setState({\r\n            searchInput : e\r\n        });\r\n    }\r\n    dinningPlace = {\r\n        McDonald: {\r\n            name: 'McDonald',\r\n            place: 'Central Rama 2',\r\n            img: Mc,\r\n            currQ: Math.floor(Math.random() * 100)\r\n        },\r\n        KFC: {\r\n            name: 'KFC',\r\n            place: 'Central Rama 3',\r\n            img: kfc,\r\n            currQ: Math.floor(Math.random() * 100)\r\n        },\r\n        BurgerKing: {\r\n            name: 'BurgerKing',\r\n            place: 'Central Rama 4',\r\n            img: bgk,\r\n            currQ: Math.floor(Math.random() * 100)\r\n        },\r\n        MK: {\r\n            name: 'MK',\r\n            place: 'Central Rama 5',\r\n            img: mk,\r\n            currQ: Math.floor(Math.random() * 100)\r\n        }\r\n    }\r\n    searchHandler = () => {\r\n        let list = {};\r\n        console.log(\"searching...\")\r\n        if(this.state.searchInput.includes(\"Mcdonald\")){\r\n            console.log(\"Mc\")\r\n            let mc = {Mcdonald : this.dinningPlace.McDonald}\r\n            list = {...list,...mc}\r\n        }else if(this.state.searchInput.includes(\"MK\")){\r\n            console.log(\"MK\")\r\n            let mk = {MK : this.dinningPlace.MK}\r\n            list = {...list,...mk}\r\n        }else if(this.state.searchInput.includes(\"KFC\")){\r\n            console.log(\"KFC\")\r\n            let kfc = {KFC : this.dinningPlace.KFC}\r\n            list = {...list,...kfc}\r\n        }else if(this.state.searchInput.includes(\"BurgerKing\")){\r\n            console.log(\"BurgerKing\")\r\n            let Burgerking = {BurgerKing : this.dinningPlace.BurgerKing}\r\n            list = {...list,...Burgerking}\r\n        }else{\r\n            list = {...this.dinningPlace}\r\n        }\r\n        this.setState({\r\n            placeList : list,\r\n        })\r\n        //console.log(list);\r\n    }\r\n    render() {\r\n        const dinningPlace = {\r\n            McDonald: {\r\n                name: 'McDonald',\r\n                place: 'Central Rama 2',\r\n                img: Mc,\r\n                currQ: Math.floor(Math.random() * 100)\r\n            },\r\n            KFC: {\r\n                name: 'KFC',\r\n                place: 'Central Rama 3',\r\n                img: kfc,\r\n                currQ: Math.floor(Math.random() * 100)\r\n            },\r\n            BurgerKing: {\r\n                name: 'BurgerKing',\r\n                place: 'Central Rama 4',\r\n                img: bgk,\r\n                currQ: Math.floor(Math.random() * 100)\r\n            },\r\n            MK: {\r\n                name: 'MK',\r\n                place: 'Central Rama 5',\r\n                img: mk,\r\n                currQ: Math.floor(Math.random() * 100)\r\n            }\r\n        }\r\n        return (\r\n        <Wrapper>\r\n            <SearchBg src={bgSearch}/>\r\n            <SearchContainner>\r\n                <Search placeholder=\"Find Dinner Place. (try Mcdonald,KFC,MK,Burgerking)\"\r\n                        value={this.state.searchInput}\r\n                        onChange={(e) => this.setSearch(e.target.value)}/>\r\n                <SearchBtn onClick={this.searchHandler}>SEARCH</SearchBtn>\r\n            </SearchContainner>\r\n            <CardCon>\r\n                {Object.entries(this.state.placeList).map(([key, val]) => {\r\n                    // console.log(key, val.name)\r\n                    return( <WrapperCards>\r\n                                        <LogoCards src={val.img}/>\r\n                                        <TextContainnerCards>\r\n                                            <TextsCards>{val.name}</TextsCards>\r\n                                            <TextsCards>Place : {val.place}</TextsCards>\r\n                                            <TextsCards>Queq : {val.currQ}</TextsCards>\r\n                                            <Link to={{pathname:'/queq',state:{din : val} }} style={{marginTop:'auto'}}><ButtonCards>Reserve</ButtonCards></Link>\r\n                                        </TextContainnerCards>\r\n                                    </WrapperCards>\r\n                    )\r\n                    // console.log(this.state.placeList)\r\n                    // return(searchList)\r\n                })}\r\n                {/* <WrapperCards>\r\n                    <LogoCards src={dinningPlace.McDonald.img}/>\r\n                    <TextContainnerCards>\r\n                        <TextsCards>{dinningPlace.McDonald.name}</TextsCards>\r\n                        <TextsCards>Place : {dinningPlace.McDonald.place}</TextsCards>\r\n                        <TextsCards>Queq : {dinningPlace.McDonald.currQ}</TextsCards>\r\n                        <Link to={{pathname:'/queq',state:{din : dinningPlace.McDonald} }} style={{marginTop:'auto'}}><ButtonCards>Reserve</ButtonCards></Link>\r\n                    </TextContainnerCards>\r\n                </WrapperCards>\r\n                <WrapperCards>\r\n                    <LogoCards src={dinningPlace.KFC.img}/>\r\n                    <TextContainnerCards>\r\n                        <TextsCards>{dinningPlace.KFC.name}</TextsCards>\r\n                        <TextsCards>Place : {dinningPlace.KFC.place}</TextsCards>\r\n                        <TextsCards>Queq : {dinningPlace.KFC.currQ}</TextsCards>\r\n                        <Link to={{pathname:'/queq',state:{din : dinningPlace.KFC} }} style={{marginTop:'auto'}}><ButtonCards>Reserve</ButtonCards></Link>\r\n                    </TextContainnerCards>\r\n                </WrapperCards>\r\n                <WrapperCards>\r\n                    <LogoCards src={dinningPlace.MK.img}/>\r\n                    <TextContainnerCards>\r\n                        <TextsCards>{dinningPlace.MK.name}</TextsCards>\r\n                        <TextsCards>Place : {dinningPlace.MK.place}</TextsCards>\r\n                        <TextsCards>Queq : {dinningPlace.MK.currQ}</TextsCards>\r\n                        <Link to={{pathname:'/queq',state:{din : dinningPlace.MK} }} style={{marginTop:'auto'}}><ButtonCards>Reserve</ButtonCards></Link>\r\n                    </TextContainnerCards>\r\n                </WrapperCards>\r\n                <WrapperCards>\r\n                    <LogoCards src={dinningPlace.BurgerKing.img}/>\r\n                    <TextContainnerCards>\r\n                        <TextsCards>{dinningPlace.BurgerKing.name}</TextsCards>\r\n                        <TextsCards>Place : {dinningPlace.BurgerKing.place}</TextsCards>\r\n                        <TextsCards>Queq : {dinningPlace.BurgerKing.currQ}</TextsCards>\r\n                        <Link to={{pathname:'/queq',state:{din : dinningPlace.BurgerKing} }} style={{marginTop:'auto'}}><ButtonCards>Reserve</ButtonCards></Link>\r\n                    </TextContainnerCards>\r\n                </WrapperCards> */}\r\n            </CardCon>\r\n        </Wrapper>\r\n        )\r\n    }\r\n}\r\n  \r\nexport default Main\r\n\r\nconst Wrapper = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\nwidth: 100%;\r\n`;\r\n\r\nconst SearchContainner = styled(FlexboxCenter)`\r\nheight: 300px;\r\nwidth: 100%;\r\nbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n@media (max-width: 768px) {\r\n    flex-direction: column;\r\n}\r\n`;\r\n\r\nconst SearchBg = styled.img`\r\nopacity: 0.75;\r\nposition: absolute;\r\nheight: 300px;\r\nwidth: 100%;\r\nobject-fit: cover;\r\nz-index: -1;\r\n`;\r\n\r\nconst Search = styled.input`\r\nwidth: 70%;\r\nheight: 30px;\r\nborder: none;\r\n  text-indent: 10px;\r\n::placeholder {\r\n  text-indent: 10px;\r\n}\r\n`;\r\n\r\nconst SearchBtn = styled.button`\r\nwidth: 10%;\r\nheight: 33px;\r\nborder: none;\r\nbackground: linear-gradient(90deg, rgba(184,52,4,1) 0%, rgba(200,16,16,1) 27%, rgba(255,0,39,1) 100%);\r\ncolor: #FFFFFF;\r\nfont-weight: bold;\r\ncursor:pointer;\r\n@media (max-width: 768px) {\r\n    width: 70%;\r\n}\r\n`;\r\n\r\nconst CardCon = styled(FlexboxCenter)`\r\nmargin: 36px 0 36px 0;\r\nwidth: 100%;\r\nflex-wrap: wrap;\r\n@media (max-width: 768px) {\r\nmargin: 8px 0 8px 0;\r\n}\r\n`;\r\n\r\n/////\r\n\r\nconst WrapperCards = styled.div`\r\ndisplay: flex;\r\n/* align-items: center; */\r\n/* justify-content: center; */\r\nborder-radius: 25px;\r\nbox-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\nwidth: 33%;\r\nmargin: 16px;\r\n@media (max-width: 768px) {\r\n    width: 80%;\r\n    flex-direction:column;\r\n}\r\n`;\r\n\r\nconst TextContainnerCards = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\n/* align-items: center; */\r\n/* justify-content: center; */\r\npadding: 16px;\r\n`;\r\n\r\nconst TextsCards = styled.span`\r\nfont-size: 1.2rem;\r\nmargin: 8px 0 8px 0;\r\n@media (max-width: 768px) {\r\nmargin: 2px 0 2px 0;\r\n}\r\n`;\r\n\r\nconst ButtonCards = styled.button`\r\nmargin-top: auto;\r\nheight: 50px;\r\nborder: none;\r\nbackground: linear-gradient(90deg, rgba(184,52,4,1) 0%, rgba(200,16,16,1) 27%, rgba(255,0,39,1) 100%);\r\ncolor: #FFFFFF;\r\nfont-weight: bold;\r\nwidth: 100%;\r\ncursor:pointer;\r\n@media (max-width: 768px) {\r\nmargin-top: 8px;\r\n}\r\n`;\r\n\r\nconst LogoCards = styled.img`\r\nmargin-right: 8px;\r\nobject-fit: contain;\r\npadding: 12px;\r\nmin-width: 100px;\r\nborder-radius:  25px 0 0 25px ;\r\nbackground: linear-gradient(90deg, rgba(211,235,9,1) 0%, rgba(199,5,5,1) 52%, rgba(222,30,30,1) 100%);\r\n@media (max-width: 768px) {\r\nborder-radius: 25px 25px 0 0;\r\nmargin-right: 0px;\r\n}\r\n`;"]},"metadata":{},"sourceType":"module"}