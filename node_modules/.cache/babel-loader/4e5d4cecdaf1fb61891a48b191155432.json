{"ast":null,"code":"var _this=this;import React,{Component}from'react';import styled from'styled-components';import{FlexboxCenter}from'../StyledCom/flexbox.js';var TestProps=function TestProps(props){var reciveValue=props.parentValue?\"success\":\"fail\";return React.createElement(\"div\",{style:{height:\"200px\",width:\"300px\",display:\"flex\",flexDirection:\"column\",justifyContent:\"center\",alignItems:\"center\",backgroundColor:\"#CCCCCC\",borderRadius:\"25px\",boxShadow:\"5px 10px\",margin:\"20px\"}},React.createElement(\"span\",null,\"First child\"),React.createElement(\"button\",{onClick:function onClick(){return _this.props.childToParent();}},\"Parent Value\"),React.createElement(\"span\",{style:{color:\"#000000\"}},reciveValue));};export default TestProps;","map":{"version":3,"sources":["C:/Users/PunchJa/Desktop/Github.io/react-gh-pages/src/Components/testProps.js"],"names":["React","Component","styled","FlexboxCenter","TestProps","props","reciveValue","parentValue","height","width","display","flexDirection","justifyContent","alignItems","backgroundColor","borderRadius","boxShadow","margin","childToParent","color"],"mappings":"eAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,OAASC,aAAT,KAA8B,yBAA9B,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CACzB,GAAIC,CAAAA,WAAW,CAAGD,KAAK,CAACE,WAAN,CAAoB,SAApB,CAAgC,MAAlD,CACA,MACI,4BAAK,KAAK,CAAE,CACRC,MAAM,CAAE,OADA,CAERC,KAAK,CAAE,OAFC,CAGRC,OAAO,CAAE,MAHD,CAIRC,aAAa,CAAE,QAJP,CAKRC,cAAc,CAAE,QALR,CAMRC,UAAU,CAAE,QANJ,CAORC,eAAe,CAAE,SAPT,CAQRC,YAAY,CAAE,MARN,CASRC,SAAS,CAAE,UATH,CAURC,MAAM,CAAE,MAVA,CAAZ,EAYI,8CAZJ,CAaI,8BAAQ,OAAO,CAAE,yBAAM,CAAA,KAAI,CAACZ,KAAL,CAAWa,aAAX,EAAN,EAAjB,iBAbJ,CAcI,4BAAM,KAAK,CAAE,CACTC,KAAK,CAAE,SADE,CAAb,EAGKb,WAHL,CAdJ,CADJ,CAsBH,CAxBD,CA0BA,cAAeF,CAAAA,SAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport styled from 'styled-components'\r\nimport { FlexboxCenter } from '../StyledCom/flexbox.js'\r\n\r\nconst TestProps = (props) => {\r\n    let reciveValue = props.parentValue ? \"success\" : \"fail\"\r\n    return(\r\n        <div style={{\r\n            height: \"200px\",\r\n            width: \"300px\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            backgroundColor: \"#CCCCCC\",\r\n            borderRadius: \"25px\",\r\n            boxShadow: \"5px 10px\",\r\n            margin: \"20px\"\r\n        }}>\r\n            <span>First child</span>\r\n            <button onClick={() => this.props.childToParent()}>Parent Value</button>\r\n            <span style={{\r\n                color: \"#000000\"\r\n            }}>\r\n                {reciveValue}\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TestProps;"]},"metadata":{},"sourceType":"module"}